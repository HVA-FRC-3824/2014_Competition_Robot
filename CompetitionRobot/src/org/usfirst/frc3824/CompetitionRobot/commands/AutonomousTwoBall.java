// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3824.CompetitionRobot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import edu.wpi.first.wpilibj.command.WaitUntilCommand;
import org.usfirst.frc3824.CompetitionRobot.Constants;

/**
 *
 */
public class AutonomousTwoBall extends CommandGroup
{
    public AutonomousTwoBall()
    {
        addSequential(new VacuumOn());
        addSequential(new PickupBallIn());
        addSequential(new WaitUntilCommand(Constants.WAIT_FOR_VACUUM_AUTONOMOUS_TIME));

        addSequential(new PickupBallStop());

        // set the shooter angle
        addParallel(new SetShooterAngle(Constants.SHOOTER_REGULAR_SHOT_POSITION));

        // drive to the goal
        addSequential(new ChassisDriveStraight(Constants.AUTONOMOUS_TWO_BALL_START_DRIVE_TIME,
                                               Constants.AUTONOMOUS_TWO_BALL_START_DRIVER_POWER,
                                               Constants.AUTONOMOUS_TWO_BALL_START_DRIVE_ANGLE));

        // shoot and then disable the vacuum
        addSequential(new CannonShoot());

        // Turn on pickup
        addSequential(new PickupBallIn());

        //Sets shoter to pickup angle
        addSequential(new SetShooterAngle(Constants.SHOOTER_PICKUP_POSITION));

        //change distance
        addSequential(new ChassisDriveStraight(Constants.AUTONOMOUS_TWO_BALL_PICKUP_DRIVE_TIME,
                                               Constants.AUTONOMOUS_TWO_BALL_PICKUP_DRIVE_POWER,
                                               Constants.AUTONOMOUS_TWO_BALL_PICKUP_DRIVE_ANGLE));

        //addSequential(new Wait(Constants.WAIT_FOR_VACUUM_AUTONOMOUS_TIME));

        //Set robot to drive backwards
        addSequential(new ChassisDriveStraight(Constants.AUTONOMOUS_TWO_BALL_BACKUP_DRIVE_TIME,
                                               Constants.AUTONOMOUS_TWO_BALL_BACKUP_DRIVE_POWER,
                                               Constants.AUTONOMOUS_TWO_BALL_BACKUP_DRIVE_ANGLE));
        

        //Gets robot ready to shoot
        addSequential(new SetShooterAngle(Constants.SHOOTER_REGULAR_SHOT_POSITION));
        addSequential(new PickupBallStop());

        addSequential(new CannonShoot());

        //Robot is ready to pickup a ball if need be
        addParallel(new SetShooterAngle(Constants.SHOOTER_PICKUP_POSITION));

        addSequential(new VacuumOff());
    }
}
